{
    "type": [
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        2
    ],
    "data": [
        "  park.Test.weekNest %>% ",
        "+ ",
        "    mutate(A_linear_reg7 = map(.x = data, fit = linear_reg7, .f = model_pred),",
        "+ ",
        "           B_linear_reg8 = map(.x = data, fit = linear_reg8, .f = model_pred),",
        "+ ",
        "           C_linear_reg9 = map(.x = data, fit = linear_reg9, .f = model_pred)",
        "+ ",
        "           #D_poisson_reg1 = map(.x = data, fit = poisson_reg1, .f = model_pred),",
        "+ ",
        "           #E_poisson_reg2 = map(.x = data, fit = poisson_reg2, .f = model_pred)",
        "+ ",
        "           )",
        "> ",
        "",
        "> ",
        "week_predictions",
        "> ",
        "week_predictions <- week_predictions %>%  ",
        "+ ",
        "    gather(Regression, Prediction, -data, -week) %>% ",
        "+ ",
        "    mutate(Observed = map(data, pull, Real_Count),",
        "+ ",
        "# we do not have countMeters here",
        "+ ",
        "#           Observed_mean = map2(Observed, countMeters, ~ (.x / .y)),",
        "+ ",
        "#           Prediction_mean = map2(Prediction, countMeters, ~ (.x / .y)),",
        "+ ",
        "           Absolute_Error = map2(Observed, Prediction,  ~ abs(.x - .y)),",
        "+ ",
        "           MAE = map_dbl(Absolute_Error, mean),",
        "+ ",
        "           sd_AE = map_dbl(Absolute_Error, sd))",
        "> ",
        "",
        "> ",
        "week_predictions %>%",
        "+ ",
        "  dplyr::select(week, Regression, MAE) %>%",
        "+ ",
        "  gather(Variable, MAE, -Regression, -week) %>%",
        "+ ",
        "  ggplot(aes(week, MAE)) + ",
        "+ ",
        "    geom_bar(aes(fill = Regression), position = \"dodge\", stat=\"identity\") +",
        "+ ",
        "    scale_fill_manual(values = palette5) +",
        "+ ",
        "    labs(title = \"Mean Absolute Errors by model specification and week\") +",
        "+ ",
        "  plotTheme()",
        "> ",
        "test.result <- week_predictions %>% ",
        "+ ",
        "  mutate(interval60 = map(data, pull, interval60),",
        "+ ",
        "         uniqueID = map(data, pull, uniqueID)) %>%",
        "+ ",
        "  dplyr::select(interval60, uniqueID, Observed, Prediction, Regression) %>%",
        "+ ",
        "  unnest(cols = c(interval60, uniqueID, Observed, Prediction)) %>%",
        "+ ",
        "  left_join(park.Test %>% ",
        "+ ",
        "              dplyr::select(interval60, uniqueID, countMeters),",
        "+ ",
        "            by=c(\"interval60\",\"uniqueID\")) %>% ",
        "+ ",
        "  mutate(Prediction_mean = Prediction/countMeters,",
        "+ ",
        "         Observed_mean = Observed/countMeters,",
        "+ ",
        "         Absolute_Error = abs(Prediction_mean - Observed_mean),",
        "+ ",
        "         APE = Absolute_Error/Observed_mean) %>% ",
        "+ ",
        "  group_by(Regression) %>% ",
        "+ ",
        "  summarize(MAE = mean(Absolute_Error,na.rm = T),",
        "+ ",
        "            MAPE = mean(APE,na.rm = T),",
        "+ ",
        "            sd_AF = sd(Absolute_Error,na.rm = T)) ",
        "> ",
        "",
        "> ",
        "test.result %>% ",
        "+ ",
        "  ggplot(aes(Regression, MAE)) + ",
        "+ ",
        "    geom_bar(aes(fill = Regression), position = \"dodge\", stat=\"identity\") +",
        "+ ",
        "    scale_fill_manual(values = palette5) +",
        "+ ",
        "    labs(title = \"Mean Absolute Errors by model specification and week\",",
        "+ ",
        "         subtitle = 'for mean parking counts in each grid') +",
        "+ ",
        "  plotTheme()",
        "> ",
        "  ",
        "> ",
        "x <- week_predictions %>% ",
        "+ ",
        "  mutate(interval60 = map(data, pull, interval60),",
        "+ ",
        "         uniqueID = map(data, pull, uniqueID)) %>%",
        "+ ",
        "  dplyr::select(interval60, uniqueID, Observed, Prediction, Regression) %>%",
        "+ ",
        "  unnest(cols = c(interval60, uniqueID, Observed, Prediction)) %>%",
        "+ ",
        "  left_join(park.Test %>% ",
        "+ ",
        "              dplyr::select(interval60, uniqueID, countMeters),",
        "+ ",
        "            by=c(\"interval60\",\"uniqueID\")) %>% ",
        "+ ",
        "  mutate(Prediction_mean = Prediction/countMeters,",
        "+ ",
        "         Observed_mean = Observed/countMeters,",
        "+ ",
        "         Absolute_Error = abs(Prediction_mean - Observed_mean),",
        "+ ",
        "         APE = Absolute_Error/Observed_mean)",
        "> ",
        "",
        "> ",
        "mean(x$Observed_mean)",
        "[1] 0.1208054\n",
        "> ",
        "week_predictions %>% ",
        "+ ",
        "    mutate(interval60 = map(data, pull, interval60),",
        "+ ",
        "           uniqueID = map(data, pull, uniqueID)) %>%",
        "+ ",
        "    dplyr::select(interval60, uniqueID, Observed, Prediction, Regression) %>%",
        "+ ",
        "    unnest() %>%",
        "+ ",
        "    gather(Variable, Value, -Regression, -interval60, -uniqueID) %>%",
        "+ ",
        "    group_by(Regression, Variable, interval60) %>%",
        "+ ",
        "    summarize(Value = sum(Value)) %>%",
        "+ ",
        "    ggplot(aes(interval60, Value, colour=Variable)) + ",
        "+ ",
        "      geom_line(size = 1.1) + ",
        "+ ",
        "      facet_wrap(~Regression, ncol=1) +",
        "+ ",
        "      labs(title = \"Predicted/Observed car parks in time series\", subtitle = \"San Francisco; test set of 2 weeks\",  x = \"Hour\", y= \"Car Parks\") ",
        "> ",
        "error_grid <-",
        "+ ",
        "  week_predictions %>% ",
        "+ ",
        "  mutate(interval60 = map(data, pull, interval60),",
        "+ ",
        "         uniqueID = map(data, pull, uniqueID)) %>%",
        "+ ",
        "  dplyr::select(interval60, uniqueID, Observed, Prediction, Regression) %>%",
        "+ ",
        "  unnest() %>%",
        "+ ",
        "  filter(Regression == \"A_linear_reg7\") %>%",
        "+ ",
        "  left_join(park.Test %>% ",
        "+ ",
        "              dplyr::select(interval60, uniqueID, countMeters),",
        "+ ",
        "            by=c(\"interval60\",\"uniqueID\")) %>% ",
        "+ ",
        "  mutate(Prediction_mean = Prediction/countMeters,",
        "+ ",
        "         Observed_mean = Observed/countMeters,",
        "+ ",
        "         Absolute_Error = abs(Prediction_mean - Observed_mean)) %>% ",
        "+ ",
        "  group_by(uniqueID) %>%",
        "+ ",
        "  summarize(MAE = mean(Absolute_Error, na.rm = TRUE))%>%",
        "+ ",
        "  left_join(meter_net) %>%",
        "+ ",
        "  dplyr::select(-countMeters) %>%",
        "+ ",
        "  st_as_sf()",
        "> ",
        "  ",
        "> ",
        "ggplot() +",
        "+ ",
        "  geom_sf(data = error_grid, aes(fill = MAE), color = NA) +",
        "+ ",
        "  scale_fill_viridis() +",
        "+ ",
        "  labs(title = \"MAE by Grids\")+",
        "+ ",
        "  mapTheme()",
        "> ",
        "summary(linear_reg9)",
        "\nCall:\nlm(formula = Real_Count ~ hour + dotw + lagHour + lag2Hours + \n    lag3Hours + lagDay + off_parking.nn + countCarshare + Percent_White + \n    Mean_Commute_Time + Percent_Taking_Public_Trans + countClean + \n    countFood + countGraffiti + countIncident + countViolation + \n    countRetail + pm_district_name + speedlimit + sidewalk_width, \n    data = park.Train)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-25.747  -2.371  -0.258   1.827  36.484 \n\nCoefficients:\n                                    Estimate",
        " Std. Error t value Pr(>|t|)    \n(Intercept)                        6.973e+00  8.986e-01   7.760 8.65e-15 ***\nhour                              -2.946e-01  6.731e-03 -43.758  < 2e-16 ***\ndotw.L                             3.807e-01  4.743e-02   8.028 1.01e-15 ***\ndotw.Q                            -1.372e-01  4.596e-02  -2.985 0.002841 ** \ndotw.C                             9.757e-02  4.350e-02   2.243 0.024905 *  \ndotw^4                             1.024e-01  4.233e-02   2.419 0.015573 *  \nlagHour                          ",
        "  2.311e-01  3.808e-03  60.691  < 2e-16 ***\nlag2Hours                          8.448e-02  3.974e-03  21.256  < 2e-16 ***\nlag3Hours                         -1.809e-02  3.287e-03  -5.504 3.73e-08 ***\nlagDay                             6.035e-01  3.405e-03 177.252  < 2e-16 ***\noff_parking.nn                    -1.030e-04  8.288e-05  -1.243 0.214008    \ncountCarshare                      6.884e-02  4.633e-02   1.486 0.137312    \nPercent_White                      9.793e-01  2.727e-01   3.592 0.000329 ***\nMean_Commute_Time                ",
        " -7.717e-03  3.563e-03  -2.166 0.030321 *  \nPercent_Taking_Public_Trans       -2.959e+00  1.083e+00  -2.732 0.006294 ** \ncountClean                         4.430e-04  1.271e-04   3.486 0.000491 ***\ncountFood                          1.807e-02  4.402e-03   4.104 4.07e-05 ***\ncountGraffiti                      1.259e-03  4.989e-03   0.252 0.800757    \ncountIncident                     -3.869e-03  1.209e-03  -3.200 0.001375 ** \ncountViolation                    -5.049e-03  9.646e-03  -0.523 0.600663    \ncountRetail                      ",
        "  6.660e-03  3.118e-03   2.136 0.032695 *  \npm_district_nameDowntown          -3.462e-01  1.789e-01  -1.935 0.053001 .  \npm_district_nameFisherman's Wharf  3.627e-01  1.663e-01   2.181 0.029177 *  \npm_district_nameN.Beach-Chinatown  4.112e-01  1.769e-01   2.324 0.020119 *  \npm_district_namePolk               2.602e-01  1.383e-01   1.881 0.059930 .  \npm_district_namePort of SF         1.033e-01  1.791e-01   0.577 0.564067    \npm_district_nameRussian Hill      -6.257e-01  1.845e-01  -3.392 0.000695 ***\npm_district_nameShowplace Square ",
        " -3.535e-01  1.818e-01  -1.944 0.051849 .  \npm_district_nameSouth Embarcadero -3.244e-01  1.693e-01  -1.917 0.055253 .  \npm_district_nameTelegraph Hill    -6.245e-01  2.052e-01  -3.044 0.002335 ** \npm_district_nameTenderloin        -2.346e-01  1.419e-01  -1.653 0.098248 .  \npm_district_nameUnion             -3.351e-01  3.334e-01  -1.005 0.314854    \npm_district_nameWestern SoMa      -4.492e-01  1.495e-01  -3.004 0.002664 ** \nspeedlimit                        -1.367e-02  2.343e-02  -0.583 0.559607    \nsidewalk_width                   ",
        " -5.147e-02  1.392e-02  -3.697 0.000218 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 4.435 on 49861 degrees of freedom\n  (5544 observations deleted due to missingness)\nMultiple R-squared:  0.7779,\tAdjusted R-squared:  0.7777 \nF-statistic:  5135 on 34 and 49861 DF,  p-value: < 2.2e-16\n\n",
        "> ",
        "# transfer to long form",
        "> ",
        "plotData.lag <- park.panel.lag %>% ",
        "+ ",
        "  st_drop_geometry() %>% ",
        "+ ",
        " #filter(week == 28) %>%",
        "+ ",
        "  dplyr::select(starts_with(\"lag\"), Trip_Count) %>%",
        "+ ",
        "  gather(Variable, Value, -Trip_Count) %>%",
        "+ ",
        "  mutate(Variable = fct_relevel(Variable, \"lag0.5Hour\",\"lag1Hours\",\"lag1.5Hours\",",
        "+ ",
        "",
        "+ ",
        "",
        "+ ",
        "                                          \"lag2Hours\",\"lag12Hours\",\"lag1day\"))",
        "Error: Can't subset columns that don't exist.\n\u001B[31mx\u001B[39m Column `Trip_Count` doesn't exist.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "View(park.Test)",
        "> ",
        "# transfer to long form",
        "> ",
        "plotData.lag <- park.panel.lag %>% ",
        "+ ",
        "  st_drop_geometry() %>% ",
        "+ ",
        " #filter(week == 28) %>%",
        "+ ",
        "  dplyr::select(starts_with(\"lag\"), Real_Count) %>%",
        "+ ",
        "  gather(Variable, Value, -Real_Count) %>%",
        "+ ",
        "  mutate(Variable = fct_relevel(Variable, \"lag0.5Hour\",\"lag1Hours\",\"lag1.5Hours\",",
        "+ ",
        "",
        "+ ",
        "",
        "+ ",
        "                                          \"lag2Hours\",\"lag12Hours\",\"lag1day\"))",
        "> ",
        "#caculaye cor and plot",
        "> ",
        "correlation.lag <-",
        "+ ",
        "  group_by(plotData.lag, Variable) %>%",
        "+ ",
        "    summarize(correlation = round(cor(Value, Real_Count, use = \"complete.obs\"), 2)) ",
        "> ",
        "",
        "> ",
        "ggplot(plotData.lag, aes(Value, Real_Count)) +",
        "+ ",
        "  geom_point(size = 0.5, color = palette5b[1]) +",
        "+ ",
        "  geom_text(data = correlation.lag, aes(label = paste(\"r =\", correlation)),",
        "+ ",
        "            x=-Inf, y=Inf, vjust = 1.5, hjust = -.1, size = 1) +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, colour = palette5b[4]) +",
        "+ ",
        "  facet_wrap(~Variable, nrow = 1, scales = \"free\") +",
        "+ ",
        "  labs(title = \"Parking count s a function of ime lags\",",
        "+ ",
        "       subtitle = \"Six weeks in July & August, 2021\") +",
        "+ ",
        "  plotTheme()",
        "> ",
        "# transfer to long form",
        "> ",
        "plotData.lag <- park.panel.lag %>% ",
        "+ ",
        "  st_drop_geometry() %>% ",
        "+ ",
        "  dplyr::select(starts_with(\"lag\"), Real_Count) %>%",
        "+ ",
        "  gather(Variable, Value, -Real_Count) %>%",
        "+ ",
        "  mutate(Variable = fct_relevel(Variable, \"lagHour\",\"lag2Hours\",\"lag3Hours\",\"lagDay\"))",
        "> ",
        "#caculaye cor and plot",
        "> ",
        "correlation.lag <-",
        "+ ",
        "  group_by(plotData.lag, Variable) %>%",
        "+ ",
        "    summarize(correlation = round(cor(Value, Real_Count, use = \"complete.obs\"), 2)) ",
        "> ",
        "",
        "> ",
        "ggplot(plotData.lag, aes(Value, Real_Count)) +",
        "+ ",
        "  geom_point(size = 0.5, color = palette5b[1]) +",
        "+ ",
        "  geom_text(data = correlation.lag, aes(label = paste(\"r =\", correlation)),",
        "+ ",
        "            x=-Inf, y=Inf, vjust = 1.5, hjust = -.1, size = 1) +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, colour = palette5b[4]) +",
        "+ ",
        "  facet_wrap(~Variable, nrow = 1, scales = \"free\") +",
        "+ ",
        "  labs(title = \"Parking count s a function of ime lags\",",
        "+ ",
        "       subtitle = \"Six weeks in July & August, 2021\") +",
        "+ ",
        "  plotTheme()",
        "> ",
        "View(correlation.lag)",
        "> ",
        "ggplot(plotData.lag, aes(Value, Real_Count)) +",
        "+ ",
        "  geom_point(size = 0.5, color = palette5b[1]) +",
        "+ ",
        "  geom_text(data = correlation.lag, aes(label = paste(\"r =\", correlation)),",
        "+ ",
        "            vjust = 1.5, hjust = -.1, size = 1) +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, colour = palette5b[4]) +",
        "+ ",
        "  facet_wrap(~Variable, nrow = 1, scales = \"free\") +",
        "+ ",
        "  labs(title = \"Parking count s a function of ime lags\",",
        "+ ",
        "       subtitle = \"Six weeks in July & August, 2021\") +",
        "+ ",
        "  plotTheme()",
        "Error in FUN(X[[i]], ...) : object 'Value' not found\n",
        "> ",
        "ggplot(plotData.lag, aes(Value, Real_Count)) +",
        "+ ",
        "  geom_point(size = 0.5, color = palette5b[1]) +",
        "+ ",
        "  geom_text(data = correlation.lag, aes(label = paste(\"r =\", correlation)),",
        "+ ",
        "            x=-Inf, y=Inf, size = 1) +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, colour = palette5b[4]) +",
        "+ ",
        "  facet_wrap(~Variable, nrow = 1, scales = \"free\") +",
        "+ ",
        "  labs(title = \"Parking count s a function of ime lags\",",
        "+ ",
        "       subtitle = \"Six weeks in July & August, 2021\") +",
        "+ ",
        "  plotTheme()",
        "> ",
        "ggplot(plotData.lag, aes(Value, Real_Count)) +",
        "+ ",
        "  geom_point(size = 0.5, color = palette5b[1]) +",
        "+ ",
        "  geom_text(data = correlation.lag, aes(label = paste(\"r =\", correlation)),",
        "+ ",
        "            x=-Inf, y=Inf, vjust = 1.5, hjust = -.1) +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, colour = palette5b[4]) +",
        "+ ",
        "  facet_wrap(~Variable, nrow = 1, scales = \"free\") +",
        "+ ",
        "  labs(title = \"Parking count s a function of ime lags\",",
        "+ ",
        "       subtitle = \"Six weeks in July & August, 2021\") +",
        "+ ",
        "  plotTheme()",
        "> ",
        "ggplot(plotData.lag, aes(Value, Real_Count)) +",
        "+ ",
        "  geom_point(size = 0.5, color = palette5b[1]) +",
        "+ ",
        "  geom_text(data = correlation.lag, aes(label = paste(\"r =\", correlation)),",
        "+ ",
        "            x=-Inf, y=Inf, vjust = 1.5, hjust = -.1) +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, colour = palette5b[4]) +",
        "+ ",
        "  facet_wrap(~Variable, nrow = 1, scales = \"free\") +",
        "+ ",
        "  labs(title = \"Parking count s a function of ime lags\",",
        "+ ",
        "       subtitle = \"Six weeks in July & August, 2021\") +",
        "+ ",
        "  plotTheme()",
        "> ",
        "ggplot(plotData.lag, aes(Value, Real_Count)) +",
        "+ ",
        "  geom_point(size = 0.5, color = palette5b[1]) +",
        "+ ",
        "  geom_text(data = correlation.lag, aes(label = paste(\"r =\", correlation)),",
        "+ ",
        "            x=-Inf, y=Inf, vjust = 1.5, hjust = -.1，size = 5) +",
        "Error: unexpected input in:\n\"  geom_text(data = correlation.lag, aes(label = paste(\"r =\", correlation)),\n            x=-Inf, y=Inf, vjust = 1.5, hjust = -.1，\"\n",
        "> ",
        "ggplot(plotData.lag, aes(Value, Real_Count)) +",
        "+ ",
        "  geom_point(size = 0.5, color = palette5b[1]) +",
        "+ ",
        "  geom_text(data = correlation.lag, aes(label = paste(\"r =\", correlation)),",
        "+ ",
        "            x=-Inf, y=Inf, vjust = 1.5, hjust = -.1, size = 5) +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, colour = palette5b[4]) +",
        "+ ",
        "  facet_wrap(~Variable, nrow = 1, scales = \"free\") +",
        "+ ",
        "  labs(title = \"Parking count s a function of ime lags\",",
        "+ ",
        "       subtitle = \"Six weeks in July & August, 2021\") +",
        "+ ",
        "  plotTheme()",
        "> ",
        "ggplot(plotData.lag, aes(Value, Real_Count)) +",
        "+ ",
        "  geom_point(size = 0.5, color = palette5b[1]) +",
        "+ ",
        "  geom_text(data = correlation.lag, aes(label = paste(\"r =\", correlation)),",
        "+ ",
        "            x=-Inf, y=Inf, vjust = 1.5, hjust = -.1, size = 10) +",
        "+ ",
        "  geom_smooth(method = \"lm\", se = FALSE, colour = palette5b[4]) +",
        "+ ",
        "  facet_wrap(~Variable, nrow = 1, scales = \"free\") +",
        "+ ",
        "  labs(title = \"Parking count s a function of ime lags\",",
        "+ ",
        "       subtitle = \"Six weeks in July & August, 2021\") +",
        "+ ",
        "  plotTheme()",
        "> ",
        "group_by(park.panel.lag, week, Pickup.Census.Tract) %>%",
        "+ ",
        "  summarize(Sum_Real_Count = sum(Real_Count)) %>%",
        "+ ",
        "  ungroup() %>% ",
        "+ ",
        "  ggplot() + geom_sf(aes(fill = q5(Sum_Real_Count))) +",
        "+ ",
        "    facet_wrap(~week, ncol = 8) +",
        "+ ",
        "    scale_fill_manual(values = palette5,",
        "+ ",
        "                      labels = c(\"16\", \"140\", \"304\", \"530\", \"958\"),",
        "+ ",
        "                      name = \"Real_Count\") +",
        "+ ",
        "    labs(title=\"Sum of parking records by tract and week\") +",
        "+ ",
        "    mapTheme() + theme(legend.position = \"bottom\") ",
        "Error: Must group by variables found in `.data`.\n* Column `Pickup.Census.Tract` is not found.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "group_by(park.panel.lag, week, uniqueID) %>%",
        "+ ",
        "  summarize(Sum_Real_Count = sum(Real_Count)) %>%",
        "+ ",
        "  ungroup() %>% ",
        "+ ",
        "  ggplot() + geom_sf(aes(fill = q5(Sum_Real_Count))) +",
        "+ ",
        "    facet_wrap(~week, ncol = 8) +",
        "+ ",
        "    scale_fill_manual(values = palette5,",
        "+ ",
        "                      labels = c(\"16\", \"140\", \"304\", \"530\", \"958\"),",
        "+ ",
        "                      name = \"Real_Count\") +",
        "+ ",
        "    labs(title=\"Sum of parking records by tract and week\") +",
        "+ ",
        "    mapTheme() + theme(legend.position = \"bottom\") ",
        "> ",
        "group_by(park.panel.lag, week, uniqueID) %>%",
        "+ ",
        "  summarize(Sum_Real_Count = sum(Real_Count)) %>%",
        "+ ",
        "  ungroup() %>% ",
        "+ ",
        "  ggplot() + geom_sf(aes(fill = q5(Sum_Real_Count))) +",
        "+ ",
        "    facet_wrap(~week, ncol = 8) +",
        "+ ",
        "    scale_fill_manual(values = palette5,",
        "+ ",
        "                      labels = c(\"16\", \"140\", \"304\", \"530\", \"958\"),",
        "+ ",
        "                      name = \"Real_Count\") +",
        "+ ",
        "    labs(title=\"Sum of parking records by tract and week\") +",
        "+ ",
        "    mapTheme() + theme(legend.position = \"bottom\") ",
        "> ",
        "spatial_plot <- group_by(park.panel.lag, week, uniqueID) %>%",
        "+ ",
        "  summarize(Sum_Real_Count = sum(Real_Count)) %>%",
        "+ ",
        "  ungroup()",
        "> ",
        "",
        "> ",
        "spatial_plot %>% ",
        "+ ",
        "  ggplot() + geom_sf(aes(fill = q5(Sum_Real_Count))) +",
        "+ ",
        "    facet_wrap(~week, ncol = 8) +",
        "+ ",
        "    scale_fill_manual(values = palette5,",
        "+ ",
        "                      labels = qBr(spatial_plot, \"Sum_Real_Count\"),",
        "+ ",
        "                      name = \"Real_Count\") +",
        "+ ",
        "    labs(title=\"Sum of parking records by tract and week\") +",
        "+ ",
        "    mapTheme() + theme(legend.position = \"bottom\") ",
        "> ",
        "View(test.result)",
        "> ",
        "",
        "> ",
        "0.05676859/0.1208054",
        "[1] 0.4699177\n",
        "> ",
        "summary(linear_reg7)",
        "\nCall:\nlm(formula = Real_Count ~ hour + dotw + uniqueID + lagHour + \n    lag2Hours + lag3Hours + lagDay, data = park.Train)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-25.437  -2.319  -0.243   1.885  35.647 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  4.615852   0.311698  14.809  < 2e-16 ***\nhour        -0.269543   0.006698 -40.243  < 2e-16 ***\ndotw.L       0.390997   0.046932   8.331  < 2e-16 ***\ndotw.Q      -0.127832   0.045478  -2.811 0.004943 ** \ndotw.C     ",
        "  0.101465   0.043045   2.357 0.018417 *  \ndotw^4       0.082868   0.041891   1.978 0.047913 *  \nuniqueID10   0.164524   0.422355   0.390 0.696878    \nuniqueID100  0.665628   0.422629   1.575 0.115270    \nuniqueID101 -0.978450   0.422653  -2.315 0.020616 *  \nuniqueID102 -0.487597   0.422367  -1.154 0.248325    \nuniqueID103 -0.939047   0.422614  -2.222 0.026288 *  \nuniqueID104 -0.552767   0.422344  -1.309 0.190605    \nuniqueID105  0.465736   0.422557   1.102 0.270387    \nuniqueID106  0.365632   0.422435   0.866",
        " 0.386750    \nuniqueID107 -0.335402   0.422289  -0.794 0.427055    \nuniqueID109  1.593822   0.423329   3.765 0.000167 ***\nuniqueID11   0.239869   0.422353   0.568 0.570081    \nuniqueID112  2.568257   0.426507   6.022 1.74e-09 ***\nuniqueID113  1.968808   0.425304   4.629 3.68e-06 ***\nuniqueID114  4.014591   0.430640   9.322  < 2e-16 ***\nuniqueID115  3.401149   0.428740   7.933 2.19e-15 ***\nuniqueID116  2.020352   0.425031   4.753 2.01e-06 ***\nuniqueID117  0.879520   0.422685   2.081 0.037458 *  \nuniqueID118  0.297084",
        "   0.422380   0.703 0.481837    \nuniqueID119 -0.482170   0.422337  -1.142 0.253596    \nuniqueID12   0.420098   0.422547   0.994 0.320129    \nuniqueID120 -0.125988   0.422288  -0.298 0.765439    \nuniqueID121 -0.646406   0.422349  -1.531 0.125899    \nuniqueID122  1.077887   0.423270   2.547 0.010882 *  \nuniqueID123  0.450224   0.422462   1.066 0.286558    \nuniqueID124 -0.750399   0.422450  -1.776 0.075689 .  \nuniqueID125  1.383377   0.423553   3.266 0.001091 ** \nuniqueID127  1.377045   0.423103   3.255 0.001136",
        " ** \nuniqueID13  -0.519445   0.422370  -1.230 0.218766    \nuniqueID130  3.586301   0.429553   8.349  < 2e-16 ***\nuniqueID131  4.862241   0.435978  11.152  < 2e-16 ***\nuniqueID132  3.152554   0.427935   7.367 1.77e-13 ***\nuniqueID133  1.787614   0.424139   4.215 2.51e-05 ***\nuniqueID134  4.121502   0.431643   9.548  < 2e-16 ***\nuniqueID135  1.464710   0.424303   3.452 0.000557 ***\nuniqueID136  0.555694   0.422557   1.315 0.188491    \nuniqueID137  0.586778   0.422581   1.389 0.164974    \nuniqueID138  1.863348",
        "   0.424344   4.391 1.13e-05 ***\nuniqueID139 -0.316317   0.422295  -0.749 0.453835    \nuniqueID14  -0.054084   0.422293  -0.128 0.898093    \nuniqueID140  0.612058   0.422592   1.448 0.147528    \nuniqueID141 -0.200889   0.422287  -0.476 0.634279    \nuniqueID142  0.975516   0.422834   2.307 0.021054 *  \nuniqueID143  0.885595   0.422782   2.095 0.036204 *  \nuniqueID144  1.657111   0.424133   3.907 9.36e-05 ***\nuniqueID145  4.062213   0.430827   9.429  < 2e-16 ***\nuniqueID148  1.464164   0.423589   3.457 0.000548",
        " ***\nuniqueID149  3.358053   0.429121   7.825 5.16e-15 ***\nuniqueID15  -0.367121   0.422313  -0.869 0.384681    \nuniqueID150  2.998791   0.427324   7.018 2.29e-12 ***\nuniqueID151  0.552514   0.422580   1.307 0.191057    \nuniqueID152 -0.055264   0.422288  -0.131 0.895879    \nuniqueID153  2.110807   0.424786   4.969 6.75e-07 ***\nuniqueID154  1.286701   0.423427   3.039 0.002377 ** \nuniqueID155  0.971051   0.422813   2.297 0.021643 *  \nuniqueID156  0.736692   0.422647   1.743 0.081332 .  \nuniqueID157  0.670521",
        "   0.422620   1.587 0.112614    \nuniqueID158 -0.340431   0.422301  -0.806 0.420170    \nuniqueID159 -0.296410   0.422305  -0.702 0.482754    \nuniqueID16   1.786799   0.424202   4.212 2.53e-05 ***\nuniqueID160 -0.875895   0.422563  -2.073 0.038195 *  \nuniqueID161  0.009530   0.422289   0.023 0.981995    \nuniqueID162  0.327514   0.422485   0.775 0.438221    \nuniqueID163 -0.816364   0.422516  -1.932 0.053346 .  \nuniqueID166  0.691232   0.422543   1.636 0.101870    \nuniqueID167  6.035337   0.440512  13.701  < 2e-16",
        " ***\nuniqueID168  0.709248   0.422699   1.678 0.093373 .  \nuniqueID17   1.638407   0.423903   3.865 0.000111 ***\nuniqueID171 -0.879816   0.422564  -2.082 0.037339 *  \nuniqueID172 -0.580616   0.422375  -1.375 0.169247    \nuniqueID173  1.615393   0.424164   3.808 0.000140 ***\nuniqueID174  1.117191   0.423204   2.640 0.008297 ** \nuniqueID175  0.167700   0.422317   0.397 0.691300    \nuniqueID176  0.088320   0.422321   0.209 0.834347    \nuniqueID177 -0.544323   0.422348  -1.289 0.197473    \nuniqueID178 -0.169184",
        "   0.422293  -0.401 0.688693    \nuniqueID179  1.780756   0.424146   4.198 2.69e-05 ***\nuniqueID18   1.676766   0.423786   3.957 7.61e-05 ***\nuniqueID180  0.581348   0.422599   1.376 0.168937    \nuniqueID182  1.339160   0.423634   3.161 0.001573 ** \nuniqueID183  4.718414   0.434908  10.849  < 2e-16 ***\nuniqueID188  0.341937   0.422372   0.810 0.418194    \nuniqueID189  2.796120   0.426731   6.552 5.72e-11 ***\nuniqueID19  -0.336921   0.422304  -0.798 0.424981    \nuniqueID190  1.462080   0.423660   3.451 0.000559",
        " ***\nuniqueID191  0.468937   0.422463   1.110 0.267000    \nuniqueID192  0.946215   0.422883   2.238 0.025256 *  \nuniqueID193  1.569974   0.423790   3.705 0.000212 ***\nuniqueID194  0.124119   0.422297   0.294 0.768826    \nuniqueID195  0.910940   0.422818   2.154 0.031210 *  \nuniqueID197  0.936868   0.422859   2.216 0.026727 *  \nuniqueID198  2.978553   0.427467   6.968 3.26e-12 ***\nuniqueID2   -0.071097   0.422290  -0.168 0.866301    \nuniqueID203  1.232891   0.423706   2.910 0.003618 ** \nuniqueID204  3.139565",
        "   0.428979   7.319 2.54e-13 ***\nuniqueID205  2.451791   0.425004   5.769 8.03e-09 ***\nuniqueID206  1.624460   0.424051   3.831 0.000128 ***\nuniqueID207  2.630346   0.427028   6.160 7.35e-10 ***\nuniqueID208  2.638880   0.425974   6.195 5.88e-10 ***\nuniqueID209  2.627871   0.426409   6.163 7.20e-10 ***\nuniqueID21  -0.781226   0.422528  -1.849 0.064473 .  \nuniqueID212  3.681733   0.429735   8.567  < 2e-16 ***\nuniqueID213  0.400317   0.422529   0.947 0.343425    \nuniqueID217 -0.902404   0.422605  -2.135 0.032739",
        " *  \nuniqueID218  2.421914   0.425651   5.690 1.28e-08 ***\nuniqueID219  2.206987   0.425830   5.183 2.19e-07 ***\nuniqueID22  -0.314899   0.422302  -0.746 0.455868    \nuniqueID220  4.732057   0.434343  10.895  < 2e-16 ***\nuniqueID221  4.586967   0.433535  10.580  < 2e-16 ***\nuniqueID222  5.769280   0.440266  13.104  < 2e-16 ***\nuniqueID223  4.941039   0.436502  11.320  < 2e-16 ***\nuniqueID224  0.586907   0.422544   1.389 0.164844    \nuniqueID226  0.793515   0.422783   1.877 0.060539 .  \nuniqueID227  1.199148",
        "   0.423321   2.833 0.004617 ** \nuniqueID23  -0.744699   0.422505  -1.763 0.077977 .  \nuniqueID232 -0.078286   0.422295  -0.185 0.852930    \nuniqueID233  2.744148   0.427077   6.425 1.33e-10 ***\nuniqueID234  1.400085   0.423299   3.308 0.000942 ***\nuniqueID235 -0.461767   0.422351  -1.093 0.274256    \nuniqueID236  3.300196   0.428706   7.698 1.41e-14 ***\nuniqueID237  3.510396   0.429170   8.179 2.92e-16 ***\nuniqueID238  2.515853   0.425642   5.911 3.43e-09 ***\nuniqueID24   1.738280   0.424497   4.095 4.23e-05",
        " ***\nuniqueID247  1.366126   0.423646   3.225 0.001262 ** \nuniqueID248  3.029413   0.427440   7.087 1.39e-12 ***\nuniqueID249  1.519279   0.423769   3.585 0.000337 ***\nuniqueID25  -0.508312   0.422377  -1.203 0.228806    \nuniqueID251  1.818783   0.423785   4.292 1.78e-05 ***\nuniqueID252  1.936021   0.423776   4.568 4.92e-06 ***\nuniqueID253 -0.546464   0.422367  -1.294 0.195736    \nuniqueID26   0.703690   0.422730   1.665 0.095992 .  \nuniqueID261  0.879229   0.422871   2.079 0.037605 *  \nuniqueID262 -0.006771",
        "   0.422295  -0.016 0.987208    \nuniqueID266  2.024026   0.424263   4.771 1.84e-06 ***\nuniqueID267  0.691306   0.422455   1.636 0.101762    \nuniqueID27   1.343636   0.423624   3.172 0.001516 ** \nuniqueID274 -0.633355   0.422394  -1.499 0.133765    \nuniqueID275 -0.906916   0.422581  -2.146 0.031867 *  \nuniqueID279  0.676944   0.422721   1.601 0.109295    \nuniqueID28   0.441765   0.422495   1.046 0.295747    \nuniqueID280  0.503788   0.422494   1.192 0.233104    \nuniqueID284  4.131740   0.432476   9.554  < 2e-16",
        " ***\nuniqueID285  2.581559   0.426671   6.050 1.45e-09 ***\nuniqueID286  3.001298   0.428058   7.011 2.39e-12 ***\nuniqueID287  4.804249   0.435896  11.022  < 2e-16 ***\nuniqueID288  4.519584   0.435909  10.368  < 2e-16 ***\nuniqueID289  1.470530   0.424855   3.461 0.000538 ***\nuniqueID29  -0.552706   0.422378  -1.309 0.190691    \nuniqueID290 -0.933792   0.422597  -2.210 0.027134 *  \nuniqueID291 -0.559349   0.422347  -1.324 0.185382    \nuniqueID292  2.062148   0.425181   4.850 1.24e-06 ***\nuniqueID297  0.478486",
        "   0.422528   1.132 0.257457    \nuniqueID298  1.724990   0.425053   4.058 4.95e-05 ***\nuniqueID299  3.361750   0.427881   7.857 4.02e-15 ***\nuniqueID3   -0.343232   0.422308  -0.813 0.416365    \nuniqueID30   0.121937   0.422328   0.289 0.772793    \nuniqueID300  1.889936   0.424665   4.450 8.59e-06 ***\nuniqueID301  0.414956   0.422422   0.982 0.325944    \nuniqueID302  0.456703   0.422483   1.081 0.279704    \nuniqueID303 -0.527387   0.422362  -1.249 0.211795    \nuniqueID31  -0.604860   0.422418  -1.432 0.152179",
        "    \nuniqueID32   1.465029   0.422907   3.464 0.000532 ***\nuniqueID33  -0.020029   0.422289  -0.047 0.962171    \nuniqueID34  -0.080597   0.422289  -0.191 0.848638    \nuniqueID35  -0.900899   0.422583  -2.132 0.033021 *  \nuniqueID36   0.086265   0.422300   0.204 0.838140    \nuniqueID37  -0.072627   0.422292  -0.172 0.863451    \nuniqueID38   0.429806   0.422509   1.017 0.309030    \nuniqueID39   0.151778   0.422341   0.359 0.719316    \nuniqueID4    0.414338   0.422464   0.981 0.326714    \nuniqueID40   0.817306",
        "   0.422740   1.933 0.053198 .  \nuniqueID41   0.731831   0.422741   1.731 0.083431 .  \nuniqueID43   0.867611   0.422469   2.054 0.040013 *  \nuniqueID44  -0.909142   0.422608  -2.151 0.031460 *  \nuniqueID45  -0.722639   0.422473  -1.710 0.087180 .  \nuniqueID46   0.560208   0.422506   1.326 0.184873    \nuniqueID47   0.553563   0.422571   1.310 0.190206    \nuniqueID48   0.561389   0.422728   1.328 0.184180    \nuniqueID49  -0.132163   0.422295  -0.313 0.754310    \nuniqueID5    1.065153   0.423020   2.518 0.011806",
        " *  \nuniqueID50   0.517322   0.422578   1.224 0.220881    \nuniqueID51  -0.156859   0.422294  -0.371 0.710307    \nuniqueID53  -0.377196   0.422299  -0.893 0.371756    \nuniqueID54  -0.181897   0.422287  -0.431 0.666657    \nuniqueID55   0.562733   0.422538   1.332 0.182934    \nuniqueID56   0.719653   0.422651   1.703 0.088628 .  \nuniqueID57  -0.582127   0.422382  -1.378 0.168148    \nuniqueID58  -0.415896   0.422322  -0.985 0.324735    \nuniqueID59  -0.445420   0.422332  -1.055 0.291583    \nuniqueID6    0.002014",
        "   0.422291   0.005 0.996195    \nuniqueID60   1.994061   0.424439   4.698 2.63e-06 ***\nuniqueID61   1.754797   0.424050   4.138 3.51e-05 ***\nuniqueID62   0.575647   0.422628   1.362 0.173183    \nuniqueID63   2.149630   0.424606   5.063 4.15e-07 ***\nuniqueID64   0.533793   0.422540   1.263 0.206488    \nuniqueID65   0.007422   0.422310   0.018 0.985979    \nuniqueID66  -0.137207   0.422287  -0.325 0.745248    \nuniqueID67  -0.700729   0.422454  -1.659 0.097180 .  \nuniqueID68   0.566337   0.422637   1.340 0.180248",
        "    \nuniqueID69  -0.392272   0.422303  -0.929 0.352951    \nuniqueID7    2.410368   0.425451   5.665 1.47e-08 ***\nuniqueID70  -0.435499   0.422311  -1.031 0.302438    \nuniqueID71   0.071510   0.422302   0.169 0.865535    \nuniqueID72   0.669443   0.422595   1.584 0.113171    \nuniqueID73   0.543995   0.422482   1.288 0.197886    \nuniqueID74   1.048914   0.422799   2.481 0.013109 *  \nuniqueID75   0.944722   0.422858   2.234 0.025478 *  \nuniqueID76   1.007718   0.423048   2.382 0.017221 *  \nuniqueID77  -0.310877",
        "   0.422289  -0.736 0.461630    \nuniqueID78   1.918660   0.424003   4.525 6.05e-06 ***\nuniqueID79   1.300788   0.423604   3.071 0.002136 ** \nuniqueID8    0.792600   0.422680   1.875 0.060774 .  \nuniqueID80   0.645624   0.422593   1.528 0.126576    \nuniqueID81   0.543985   0.422500   1.288 0.197913    \nuniqueID82  -0.227498   0.422287  -0.539 0.590077    \nuniqueID83  -0.950138   0.422606  -2.248 0.024563 *  \nuniqueID84  -0.513020   0.422352  -1.215 0.224495    \nuniqueID85   0.236374   0.422345   0.560 0.575706",
        "    \nuniqueID86  -0.782243   0.422490  -1.852 0.064103 .  \nuniqueID87   1.328354   0.423221   3.139 0.001698 ** \nuniqueID88   1.276365   0.423419   3.014 0.002576 ** \nuniqueID89   0.164921   0.422331   0.391 0.696167    \nuniqueID9    0.657829   0.422563   1.557 0.119534    \nuniqueID90   0.490759   0.422470   1.162 0.245387    \nuniqueID91  -0.485415   0.422369  -1.149 0.250451    \nuniqueID92   0.825072   0.422574   1.952 0.050885 .  \nuniqueID95   0.991127   0.423056   2.343 0.019145 *  \nuniqueID96   2.667197",
        "   0.427582   6.238 4.47e-10 ***\nuniqueID97   2.899335   0.426918   6.791 1.12e-11 ***\nuniqueID98   1.684570   0.424374   3.970 7.21e-05 ***\nuniqueID99  -0.090534   0.422295  -0.214 0.830247    \nlagHour      0.218564   0.003784  57.754  < 2e-16 ***\nlag2Hours    0.068180   0.003960  17.218  < 2e-16 ***\nlag3Hours   -0.066833   0.003537 -18.896  < 2e-16 ***\nlagDay       0.561151   0.003587 156.449  < 2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error:",
        " 4.389 on 49656 degrees of freedom\n  (5544 observations deleted due to missingness)\nMultiple R-squared:  0.7834,\tAdjusted R-squared:  0.7823 \nF-statistic: 751.4 on 239 and 49656 DF,  p-value: < 2.2e-16\n\n",
        "> ",
        "summary(linear_reg9)",
        "\nCall:\nlm(formula = Real_Count ~ hour + dotw + lagHour + lag2Hours + \n    lag3Hours + lagDay + off_parking.nn + countCarshare + Percent_White + \n    Mean_Commute_Time + Percent_Taking_Public_Trans + countClean + \n    countFood + countGraffiti + countIncident + countViolation + \n    countRetail + pm_district_name + speedlimit + sidewalk_width, \n    data = park.Train)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-25.747  -2.371  -0.258   1.827  36.484 \n\nCoefficients:\n                                    Estimate",
        " Std. Error t value Pr(>|t|)    \n(Intercept)                        6.973e+00  8.986e-01   7.760 8.65e-15 ***\nhour                              -2.946e-01  6.731e-03 -43.758  < 2e-16 ***\ndotw.L                             3.807e-01  4.743e-02   8.028 1.01e-15 ***\ndotw.Q                            -1.372e-01  4.596e-02  -2.985 0.002841 ** \ndotw.C                             9.757e-02  4.350e-02   2.243 0.024905 *  \ndotw^4                             1.024e-01  4.233e-02   2.419 0.015573 *  \nlagHour                          ",
        "  2.311e-01  3.808e-03  60.691  < 2e-16 ***\nlag2Hours                          8.448e-02  3.974e-03  21.256  < 2e-16 ***\nlag3Hours                         -1.809e-02  3.287e-03  -5.504 3.73e-08 ***\nlagDay                             6.035e-01  3.405e-03 177.252  < 2e-16 ***\noff_parking.nn                    -1.030e-04  8.288e-05  -1.243 0.214008    \ncountCarshare                      6.884e-02  4.633e-02   1.486 0.137312    \nPercent_White                      9.793e-01  2.727e-01   3.592 0.000329 ***\nMean_Commute_Time                ",
        " -7.717e-03  3.563e-03  -2.166 0.030321 *  \nPercent_Taking_Public_Trans       -2.959e+00  1.083e+00  -2.732 0.006294 ** \ncountClean                         4.430e-04  1.271e-04   3.486 0.000491 ***\ncountFood                          1.807e-02  4.402e-03   4.104 4.07e-05 ***\ncountGraffiti                      1.259e-03  4.989e-03   0.252 0.800757    \ncountIncident                     -3.869e-03  1.209e-03  -3.200 0.001375 ** \ncountViolation                    -5.049e-03  9.646e-03  -0.523 0.600663    \ncountRetail                      ",
        "  6.660e-03  3.118e-03   2.136 0.032695 *  \npm_district_nameDowntown          -3.462e-01  1.789e-01  -1.935 0.053001 .  \npm_district_nameFisherman's Wharf  3.627e-01  1.663e-01   2.181 0.029177 *  \npm_district_nameN.Beach-Chinatown  4.112e-01  1.769e-01   2.324 0.020119 *  \npm_district_namePolk               2.602e-01  1.383e-01   1.881 0.059930 .  \npm_district_namePort of SF         1.033e-01  1.791e-01   0.577 0.564067    \npm_district_nameRussian Hill      -6.257e-01  1.845e-01  -3.392 0.000695 ***\npm_district_nameShowplace Square ",
        " -3.535e-01  1.818e-01  -1.944 0.051849 .  \npm_district_nameSouth Embarcadero -3.244e-01  1.693e-01  -1.917 0.055253 .  \npm_district_nameTelegraph Hill    -6.245e-01  2.052e-01  -3.044 0.002335 ** \npm_district_nameTenderloin        -2.346e-01  1.419e-01  -1.653 0.098248 .  \npm_district_nameUnion             -3.351e-01  3.334e-01  -1.005 0.314854    \npm_district_nameWestern SoMa      -4.492e-01  1.495e-01  -3.004 0.002664 ** \nspeedlimit                        -1.367e-02  2.343e-02  -0.583 0.559607    \nsidewalk_width                   ",
        " -5.147e-02  1.392e-02  -3.697 0.000218 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 4.435 on 49861 degrees of freedom\n  (5544 observations deleted due to missingness)\nMultiple R-squared:  0.7779,\tAdjusted R-squared:  0.7777 \nF-statistic:  5135 on 34 and 49861 DF,  p-value: < 2.2e-16\n\n",
        "> ",
        "spatial_plot %>% ",
        "+ ",
        "  ggplot() + geom_sf(aes(fill = q5(Sum_Real_Count))) +",
        "+ ",
        "    facet_wrap(~week, ncol = 3) +",
        "+ ",
        "    scale_fill_manual(values = palette5,",
        "+ ",
        "                      labels = qBr(spatial_plot, \"Sum_Real_Count\"),",
        "+ ",
        "                      name = \"Real_Count\") +",
        "+ ",
        "    labs(title=\"Sum of parking records by tract and week\") +",
        "+ ",
        "    mapTheme() + theme(legend.position = \"bottom\") ",
        "> ",
        "spatial_plot.2 <- group_by(park.panel.lag, dotw, uniqueID) %>%",
        "+ ",
        "  summarize(Sum_Real_Count = sum(Real_Count)) %>%",
        "+ ",
        "  ungroup()",
        "> ",
        "",
        "> ",
        "spatial_plot.2 %>% ",
        "+ ",
        "  ggplot() + geom_sf(aes(fill = q5(Sum_Real_Count))) +",
        "+ ",
        "    facet_wrap(~week, ncol = 3) +",
        "+ ",
        "    scale_fill_manual(values = palette5,",
        "+ ",
        "                      labels = qBr(spatial_plot, \"Sum_Real_Count\"),",
        "+ ",
        "                      name = \"Real_Count\") +",
        "+ ",
        "    labs(title=\"Sum of parking records by tract and day of the week\") +",
        "+ ",
        "    mapTheme() + theme(legend.position = \"bottom\") ",
        "Error: At least one layer must contain all faceting variables: `week`.\n* Plot is missing `week`\n* Layer 1 is missing `week`\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "spatial_plot.2 %>% ",
        "+ ",
        "  ggplot() + geom_sf(aes(fill = q5(Sum_Real_Count))) +",
        "+ ",
        "    facet_wrap(~dotw, ncol = 5) +",
        "+ ",
        "    scale_fill_manual(values = palette5,",
        "+ ",
        "                      labels = qBr(spatial_plot, \"Sum_Real_Count\"),",
        "+ ",
        "                      name = \"Real_Count\") +",
        "+ ",
        "    labs(title=\"Sum of parking records by tract and day of the week\") +",
        "+ ",
        "    mapTheme() + theme(legend.position = \"bottom\") ",
        "> ",
        "spatial_plot.2 %>% ",
        "+ ",
        "  ggplot() + geom_sf(aes(fill = q5(Sum_Real_Count))) +",
        "+ ",
        "    facet_wrap(~dotw, ncol = 5) +",
        "+ ",
        "    scale_fill_manual(values = palette5,",
        "+ ",
        "                      labels = qBr(spatial_plot, \"Sum_Real_Count\"),",
        "+ ",
        "                      name = \"Real_Count\") +",
        "+ ",
        "    labs(title=\"Sum of parking records by tract and day of the week\") +",
        "+ ",
        "    mapTheme() + theme(legend.position = \"bottom\") ",
        "> ",
        "View(street_park_grid)",
        "> ",
        "week30 <-",
        "+ ",
        "  filter(street_parks.final , week == 30 & dotw == \"Mon\") %>% ",
        "+ ",
        "  mutate(interval15 = floor_date(mdy_hms(Trip.Start.Timestamp), unit = \"15 mins\"))",
        "Error: Problem with `mutate()` column `interval15`.\n\u001B[34mℹ\u001B[39m `interval15 = floor_date(mdy_hms(Trip.Start.Timestamp), unit = \"15 mins\")`.\n\u001B[31mx\u001B[39m object 'Trip.Start.Timestamp' not found\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "week30 <-",
        "+ ",
        "  filter(street_parks.final , week == 30 & dotw == \"Mon\") %>% ",
        "+ ",
        "  mutate(interval15 = floor_date(mdy_hms(session_start_dt), unit = \"15 mins\"))",
        "> ",
        "",
        "> ",
        "week30.panel <-",
        "+ ",
        "  expand.grid(",
        "+ ",
        "    interval15 = unique(week30$interval15),",
        "+ ",
        "    uniqueID = unique(week30$uniqueID))",
        "> ",
        "",
        "> ",
        "park.animation.data <-",
        "+ ",
        "  mutate(week30, Real_Counter = 1) %>%",
        "+ ",
        "    right_join(week30.panel) %>% ",
        "+ ",
        "    group_by(interval15, uniqueID) %>%",
        "+ ",
        "    summarize(Real_Count = sum(Real_Counter, na.rm=T)) %>% ",
        "+ ",
        "    ungroup() %>% ",
        "+ ",
        "    left_join(var_net %>% dplyr::select(uniqueID), by=c(\"uniqueID\")) %>%",
        "+ ",
        "    st_sf() %>%",
        "+ ",
        "    mutate(Trips = case_when(Real_Count == 0 ~ \"0 parkings\",",
        "+ ",
        "                             Real_Count > 0 & Real_Count <= 3 ~ \"1-3 parkings\",",
        "+ ",
        "                             Real_Count > 3 & Real_Count <= 6 ~ \"4-6 parkings\",",
        "+ ",
        "                             Real_Count > 6 & Real_Count <= 10 ~ \"7-10 parkings\",",
        "+ ",
        "                             Real_Count > 10 ~ \"11+ parkings\")) %>%",
        "+ ",
        "    mutate(parkings  = fct_relevel(Parking Records, \"0 parkings\",\"1-3 parkings\",\"4-6 parkings\",",
        "Error: unexpected symbol in:\n\"                             Real_Count > 10 ~ \"11+ parkings\")) %>%\n    mutate(parkings  = fct_relevel(Parking Records\"\n",
        "> ",
        "park.animation.data <-",
        "+ ",
        "  mutate(week30, Real_Counter = 1) %>%",
        "+ ",
        "    right_join(week30.panel) %>% ",
        "+ ",
        "    group_by(interval15, uniqueID) %>%",
        "+ ",
        "    summarize(Real_Count = sum(Real_Counter, na.rm=T)) %>% ",
        "+ ",
        "    ungroup() %>% ",
        "+ ",
        "    left_join(var_net %>% dplyr::select(uniqueID), by=c(\"uniqueID\")) %>%",
        "+ ",
        "    st_sf() %>%",
        "+ ",
        "    mutate(Trips = case_when(Real_Count == 0 ~ \"0 parkings\",",
        "+ ",
        "                             Real_Count > 0 & Real_Count <= 3 ~ \"1-3 parkings\",",
        "+ ",
        "                             Real_Count > 3 & Real_Count <= 6 ~ \"4-6 parkings\",",
        "+ ",
        "                             Real_Count > 6 & Real_Count <= 10 ~ \"7-10 parkings\")) %>%",
        "+ ",
        "    mutate(parkings  = fct_relevel(Parking Records, \"0 parkings\",\"1-3 parkings\",\"4-6 parkings\",",
        "Error: unexpected symbol in:\n\"                             Real_Count > 6 & Real_Count <= 10 ~ \"7-10 parkings\")) %>%\n    mutate(parkings  = fct_relevel(Parking Records\"\n",
        "> ",
        "park.animation.data <-",
        "+ ",
        "  mutate(week30, Real_Counter = 1) %>%",
        "+ ",
        "    right_join(week30.panel) %>% ",
        "+ ",
        "    group_by(interval15, uniqueID) %>%",
        "+ ",
        "    summarize(Real_Count = sum(Real_Counter, na.rm=T)) %>% ",
        "+ ",
        "    ungroup() %>% ",
        "+ ",
        "    left_join(var_net %>% dplyr::select(uniqueID), by=c(\"uniqueID\")) %>%",
        "+ ",
        "    st_sf() %>%",
        "+ ",
        "    mutate(Parkings = case_when(Real_Count == 0 ~ \"0 parkings\",",
        "+ ",
        "                             Real_Count > 0 & Real_Count <= 3 ~ \"1-3 parkings\",",
        "+ ",
        "                             Real_Count > 3 & Real_Count <= 6 ~ \"4-6 parkings\",",
        "+ ",
        "                             Real_Count > 6 & Real_Count <= 10 ~ \"7-10 parkings\",",
        "+ ",
        "                             Real_Count > 10 ~ \"11+ parkings\")) %>%",
        "+ ",
        "    mutate(Parkings  = fct_relevel(Parkings, \"0 parkings\",\"1-3 parkings\",\"4-6 parkings\",",
        "+ ",
        "                                       \"7-10 parkings\",\"10+ parkings\"))",
        "Error: Must group by variables found in `.data`.\n* Column `uniqueID` is not found.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "View(week30)",
        "> ",
        "week30 <-",
        "+ ",
        "  filter(street_parks.final , week == 30 & dotw == \"Mon\") %>% ",
        "+ ",
        "  mutate(interval15 = floor_date(ymd_hms(session_start_dt), unit = \"15 mins\"))",
        "> ",
        "",
        "> ",
        "week30.panel <-",
        "+ ",
        "  expand.grid(",
        "+ ",
        "    interval15 = unique(week30$interval15),",
        "+ ",
        "    uniqueID = unique(week30$uniqueID))",
        "> ",
        "",
        "> ",
        "park.animation.data <-",
        "+ ",
        "  mutate(week30, Real_Counter = 1) %>%",
        "+ ",
        "    right_join(week30.panel) %>% ",
        "+ ",
        "    group_by(interval15, uniqueID) %>%",
        "+ ",
        "    summarize(Real_Count = sum(Real_Counter, na.rm=T)) %>% ",
        "+ ",
        "    ungroup() %>% ",
        "+ ",
        "    left_join(var_net %>% dplyr::select(uniqueID), by=c(\"uniqueID\")) %>%",
        "+ ",
        "    st_sf() %>%",
        "+ ",
        "    mutate(Parkings = case_when(Real_Count == 0 ~ \"0 parkings\",",
        "+ ",
        "                             Real_Count > 0 & Real_Count <= 3 ~ \"1-3 parkings\",",
        "+ ",
        "                             Real_Count > 3 & Real_Count <= 6 ~ \"4-6 parkings\",",
        "+ ",
        "                             Real_Count > 6 & Real_Count <= 10 ~ \"7-10 parkings\",",
        "+ ",
        "                             Real_Count > 10 ~ \"11+ parkings\")) %>%",
        "+ ",
        "    mutate(Parkings  = fct_relevel(Parkings, \"0 parkings\",\"1-3 parkings\",\"4-6 parkings\",",
        "+ ",
        "                                       \"7-10 parkings\",\"10+ parkings\"))",
        "Error: Must group by variables found in `.data`.\n* Column `uniqueID` is not found.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "View(week30)",
        "> ",
        "week30 <-",
        "+ ",
        "  filter(street_parks.final , week == 30 & dotw == \"Mon\") %>% ",
        "+ ",
        "  mutate(interval15 = floor_date(ymd_hms(session_start_dt), unit = \"15 mins\")) %>% ",
        "+ ",
        "  st_join(var_net %>% dplyr::select(uniqueID),.) %>%",
        "+ ",
        "  na.omit() ",
        "> ",
        "%>%",
        "Error: unexpected SPECIAL in \"%>%\"\n",
        "> ",
        "week30 <-",
        "+ ",
        "  filter(street_parks.final , week == 30 & dotw == \"Mon\") %>% ",
        "+ ",
        "  mutate(interval15 = floor_date(ymd_hms(session_start_dt), unit = \"15 mins\")) %>% ",
        "+ ",
        "  st_join(var_net %>% dplyr::select(uniqueID),.)  ",
        "> ",
        "",
        "> ",
        "week30.panel <-",
        "+ ",
        "  expand.grid(",
        "+ ",
        "    interval15 = unique(week30$interval15),",
        "+ ",
        "    uniqueID = unique(week30$uniqueID))",
        "> ",
        "",
        "> ",
        "park.animation.data <-",
        "+ ",
        "  mutate(week30, Real_Counter = 1) %>%",
        "+ ",
        "    right_join(week30.panel) %>% ",
        "+ ",
        "    group_by(interval15, uniqueID) %>%",
        "+ ",
        "    summarize(Real_Count = sum(Real_Counter, na.rm=T)) %>% ",
        "+ ",
        "    ungroup() %>% ",
        "+ ",
        "    left_join(var_net %>% dplyr::select(uniqueID), by=c(\"uniqueID\")) %>%",
        "+ ",
        "    st_sf() %>%",
        "+ ",
        "    mutate(Parkings = case_when(Real_Count == 0 ~ \"0 parkings\",",
        "+ ",
        "                             Real_Count > 0 & Real_Count <= 3 ~ \"1-3 parkings\",",
        "+ ",
        "                             Real_Count > 3 & Real_Count <= 6 ~ \"4-6 parkings\",",
        "+ ",
        "                             Real_Count > 6 & Real_Count <= 10 ~ \"7-10 parkings\",",
        "+ ",
        "                             Real_Count > 10 ~ \"11+ parkings\")) %>%",
        "+ ",
        "    mutate(Parkings  = fct_relevel(Parkings, \"0 parkings\",\"1-3 parkings\",\"4-6 parkings\",",
        "+ ",
        "                                       \"7-10 parkings\",\"10+ parkings\"))",
        "> ",
        "View(parking.animation.data)",
        "> ",
        "View(parking_animation)",
        "> ",
        "week30 <-",
        "+ ",
        "  filter(park.panel.lag, week == 30 & dotw == \"Mon\")",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "park.animation.data <- week30 %>% ",
        "+ ",
        "    mutate(Parkings = case_when(Real_Count == 0 ~ \"0 parkings\",",
        "+ ",
        "                             Real_Count > 0 & Real_Count <= 3 ~ \"1-3 parkings\",",
        "+ ",
        "                             Real_Count > 3 & Real_Count <= 6 ~ \"4-6 parkings\",",
        "+ ",
        "                             Real_Count > 6 & Real_Count <= 10 ~ \"7-10 parkings\",",
        "+ ",
        "                             Real_Count > 10 ~ \"11+ parkings\")) %>%",
        "+ ",
        "    mutate(Parkings  = fct_relevel(Parkings, \"0 parkings\",\"1-3 parkings\",\"4-6 parkings\",",
        "+ ",
        "                                       \"7-10 parkings\",\"10+ parkings\"))",
        "> ",
        "",
        "> ",
        "rideshare_animation <-",
        "+ ",
        "  ggplot() +",
        "+ ",
        "    geom_sf(data = ride.animation.data, aes(fill = Parkings)) +",
        "+ ",
        "    scale_fill_manual(values = palette5) +",
        "+ ",
        "    labs(title = \"Parking records for one day in July 2021\",",
        "+ ",
        "         subtitle = \"60 minute intervals: {current_frame}\") +",
        "+ ",
        "    transition_manual(interval60) +",
        "+ ",
        "    mapTheme()",
        "Error in fortify(data) : object 'ride.animation.data' not found\n",
        "> ",
        "park_animation <-",
        "+ ",
        "  ggplot() +",
        "+ ",
        "    geom_sf(data = park.animation.data, aes(fill = Parkings)) +",
        "+ ",
        "    scale_fill_manual(values = palette5) +",
        "+ ",
        "    labs(title = \"Parking records for one day in July 2021\",",
        "+ ",
        "         subtitle = \"60 minute intervals: {current_frame}\") +",
        "+ ",
        "    transition_manual(interval60) +",
        "+ ",
        "    mapTheme()",
        "> ",
        "animate(park_animation, duration=20, renderer = gifski_renderer())",
        "Error in (function (classes, fdef, mtable)  : \n  unable to find an inherited method for function ‘animate’ for signature ‘\"gganim\"’\n",
        "> ",
        "gganimate::animate(park_animation, length = 15, width = 700, height = 400)",
        "Error in check.options(new, name.opt = \".X11.Options\", envir = .X11env) : \n  invalid argument name ‘length’ in 'device(files[i], ...)'\n",
        "> ",
        "animate(park_animation, duration=20, renderer = gifski_renderer())",
        "Error in (function (classes, fdef, mtable)  : \n  unable to find an inherited method for function ‘animate’ for signature ‘\"gganim\"’\n",
        "> ",
        "anim_save(\"parking_gif\", ark_animation, duration=20, renderer = gifski_renderer())",
        "Error in is.gganim(animation) : object 'ark_animation' not found\n",
        "> ",
        "animate(park_animation, duration=20, renderer = gifski_renderer())",
        "Error in (function (classes, fdef, mtable)  : \n  unable to find an inherited method for function ‘animate’ for signature ‘\"gganim\"’\n",
        "> ",
        "anim_save(\"parking_gif\", park_animation, duration=20, renderer = gifski_renderer())",
        "\rInserting image 1 at 0.00s (8%)...",
        "\rInserting image 2 at 1.67s (16%)...",
        "\rInserting image 3 at 3.33s (25%)...",
        "\rInserting image 4 at 5.00s (33%)...",
        "\rInserting image 5 at 6.67s (41%)...",
        "\rInserting image 6 at 8.33s (50%)...",
        "\rInserting image 7 at 10.00s (58%)...",
        "\rInserting image 8 at 11.67s (66%)...",
        "\rInserting image 9 at 13.33s (75%)...",
        "\rInserting image 10 at 15.00s (83%)...",
        "\rInserting image 11 at 16.67s (91%)...",
        "\rInserting image 12 at 18.33s (100%)...",
        "\nEncoding to gif...",
        " done!\n",
        "> ",
        "animate(park_animation, duration=20, renderer = gifski_renderer())",
        "Error in (function (classes, fdef, mtable)  : \n  unable to find an inherited method for function ‘animate’ for signature ‘\"gganim\"’\n",
        "> ",
        "library(gganimate)",
        "> ",
        "library(riem)",
        "> ",
        "anim_save(\"parking_gif\", park_animation, duration=10, renderer = gifski_renderer())",
        "\rInserting image 1 at 0.00s (8%)...",
        "\rInserting image 2 at 0.83s (16%)...",
        "\rInserting image 3 at 1.67s (25%)...",
        "\rInserting image 4 at 2.50s (33%)...",
        "\rInserting image 5 at 3.33s (41%)...",
        "\rInserting image 6 at 4.17s (50%)...",
        "\rInserting image 7 at 5.00s (58%)...",
        "\rInserting image 8 at 5.83s (66%)...",
        "\rInserting image 9 at 6.67s (75%)...",
        "\rInserting image 10 at 7.50s (83%)...",
        "\rInserting image 11 at 8.33s (91%)...",
        "\rInserting image 12 at 9.17s (100%)...",
        "\nEncoding to gif...",
        " done!\n",
        "> ",
        "animate(park_animation, duration=10, renderer = gifski_renderer())",
        "Error in (function (classes, fdef, mtable)  : \n  unable to find an inherited method for function ‘animate’ for signature ‘\"gganim\"’\n",
        "> ",
        "install.packages(\"gifski\")",
        "Error in install.packages : Updating loaded packages\n\nRestarting R session...\n\n"
    ]
}